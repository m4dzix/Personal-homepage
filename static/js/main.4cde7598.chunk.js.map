{"version":3,"sources":["projectsSlice.js","getProjectsApi.js","projectsSaga.js","rootSaga.js","store.js","common/Main/styled.js","common/Main/index.js","common/DarkModeButton/styled.js","common/Assets/darkMode/modeButton.svg","common/Assets/lightMode/modeButton.svg","common/DarkModeButton/index.js","common/Section/styled.js","common/Section/index.js","common/Tile/image.jpg","common/Assets/lightMode/roundListStyle.svg","common/Assets/darkMode/roundListStyle.svg","common/Tile/styled.js","common/Assets/message.svg","common/Assets/lightMode/github.svg","common/Assets/lightMode/linkedin.svg","common/Assets/lightMode/facebook.svg","common/Assets/lightMode/instagram.svg","common/Assets/darkMode/github.svg","common/Assets/darkMode/linkedin.svg","common/Assets/darkMode/facebook.svg","common/Assets/darkMode/instagram.svg","common/Tile/arraysWithSkills.js","common/Tile/index.js","features/AboutMe.js","features/ListsOfSkills.js","features/Portfolio.js","common/Assets/lightMode/loader.svg","common/Assets/darkMode/loader.svg","common/Loading/styled.js","common/Loading/index.js","common/Assets/lightMode/error.svg","common/Assets/darkMode/error.svg","common/Error/styled.js","common/Error/index.js","features/MyGithubProjects.js","features/Contact.js","globalStyle.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["projectSlice","createSlice","name","initialState","loading","project","darkMode","reducers","fetchProject","state","fetchProjectSuccess","payload","fetchProjectError","toggleDarkMode","actions","selectProjectState","selectProject","selectLoading","selectDarkMode","getProject","a","fetch","response","ok","Error","statusText","json","fetchProjectHandler","watchFetchProject","delay","call","put","takeLatest","type","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","projectReducer","middleware","run","StyledMain","styled","main","Main","children","Container","div","Text","p","theme","colors","text","Button","button","DarkModeButton","useSelector","dispatch","useDispatch","onClick","src","darkModeButton","lightModeButton","alt","StyledSection","section","props","myGithubProjects","css","breakpoints","mobileMax","portfolio","Section","body","aside","boxColor","aboutMe","lightLine","hoverLine","contact","Photo","myPhoto","Inset","h3","Title","h1","title","mySkills","skillsIWantToLearn","darkLine","mainBlue","ContentContainer","Description","List","ul","roundListStyle","darkModeRoundListStyle","Item","li","Icon","img","Link","Subheader","h2","MySkills","SkillsIWantToLearn","Tile","inset","typeOfContent","hidden","githubIcon","href","message","map","skill","darkModeGithubIcon","darkModeFacebookIcon","facebookIcon","darkModeLinkedinIcon","linkedinIcon","darkModeInstagramIcon","instagramIcon","AboutMe","ListsOfSkills","Portfolio","rotate","keyframes","Loader","loader","darkModeLoader","Loading","GoToGithubButton","mainblue","white","dodgerBlue","darkModeErrorIcon","errorIcon","MyGithubProjects","projects","useEffect","length","urlAdressToDemo","html_url","urlAdressToLive","owner","login","Contact","GlobalStyle","createGlobalStyle","background","lightTheme","darkTheme","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cde7598.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst projectSlice = createSlice({\n  name: \"projects\",\n  initialState: {\n    loading: true,\n    project: [],\n    darkMode: false,\n  },\n  reducers: {\n    fetchProject: (state) => {\n      state.loading = true;\n    },\n    fetchProjectSuccess: (state, { payload: project }) => {\n      state.project = project;\n      state.loading = false;\n    },\n    fetchProjectError: (state) => {\n      state.loading = false;\n    },\n    toggleDarkMode: (state) => {\n      state.darkMode = !state.darkMode;\n    },\n  },\n});\n\nexport const {\n  fetchProject,\n  fetchProjectSuccess,\n  fetchProjectError,\n  toggleDarkMode,\n} = projectSlice.actions;\n\nexport const selectProjectState = (state) => state.project;\nexport const selectProject = (state) => selectProjectState(state).project;\nexport const selectLoading = (state) => selectProjectState(state).loading;\nexport const selectDarkMode = (state) => selectProjectState(state).darkMode;\n\nexport default projectSlice.reducer;\n","export const getProject = async () => {\n  const api = `https://api.github.com/users/m4dzix/repos`;\n\n  const response = await fetch(api);\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  const project = await response.json();\n\n  return project;\n};\n","import { call, put, takeLatest, delay } from \"redux-saga/effects\";\nimport { getProject } from \"./getProjectsApi\";\n\nimport {\n  fetchProject,\n  fetchProjectSuccess,\n  fetchProjectError,\n} from \"./projectsSlice\";\n\nfunction* fetchProjectHandler() {\n  try {\n    yield delay(1500);\n    const project = yield call(getProject);\n    yield put(fetchProjectSuccess(project));\n  } catch (error) {\n    yield put(fetchProjectError());\n  }\n}\n\nexport function* watchFetchProject() {\n  yield takeLatest(fetchProject.type, fetchProjectHandler);\n}\n","import { all } from \"redux-saga/effects\";\nimport { watchFetchProject } from \"./projectsSaga\";\n\nexport default function* rootSaga() {\n  yield all([watchFetchProject()]);\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport projectReducer from \"./projectsSlice\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: { project: projectReducer },\n  middleware: [sagaMiddleware],\n});\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n  width: 100%;\n  max-width: 1216px;\n  margin: 115px auto 109.29px auto;\n  display: grid;\n  grid-gap: 72px;\n`;\n","import React from \"react\";\n\nimport { StyledMain } from \"./styled\";\n\nconst Main = ({ children }) => <StyledMain>{children}</StyledMain>;\n\nexport default Main;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-items: center;\n  align-items: center;\n  justify-self: flex-end;\n  margin: 17.46px;\n`;\nexport const Text = styled.p`\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.text};\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 1.3;\n  margin-right: 12.47px;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: none;\n`;\n","export default __webpack_public_path__ + \"static/media/modeButton.ec885ca5.svg\";","export default __webpack_public_path__ + \"static/media/modeButton.8fa7bb86.svg\";","import React from \"react\";\nimport { Container, Text, Button } from \"./styled\";\nimport darkModeButton from \"../Assets/darkMode/modeButton.svg\";\nimport lightModeButton from \"../Assets/lightMode/modeButton.svg\";\nimport { selectDarkMode, toggleDarkMode } from \"../../projectsSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst DarkModeButton = () => {\n  const darkMode = useSelector(selectDarkMode);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Text>Dark mode {!darkMode ? \"off\" : \"on\"}</Text>\n      <Button\n        onClick={() => {\n          dispatch(toggleDarkMode());\n        }}\n      >\n        <img\n          src={!darkMode ? lightModeButton : darkModeButton}\n          alt=\"toggle mode\"\n        ></img>\n      </Button>\n    </Container>\n  );\n};\n\nexport default DarkModeButton;\n","import styled, { css } from \"styled-components\";\n\nexport const StyledSection = styled.section`\n  display: grid;\n  grid-gap: 72px;\n  margin: 0 14px;\n  ${(props) =>\n    props.myGithubProjects &&\n    css`\n      grid-template-columns: repeat(2, 1fr);\n      grid-gap: 32px;\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n        grid-template-columns: none;\n      }\n    `};\n  ${(props) =>\n    props.portfolio &&\n    css`\n      align-items: center;\n      justify-content: center;\n    `};\n`;\n","import React from \"react\";\nimport { StyledSection } from \"./styled\";\n\nconst Section = ({ body, myGithubProjects, portfolio }) => (\n  <StyledSection myGithubProjects={myGithubProjects} portfolio={portfolio}>\n    {body}\n  </StyledSection>\n);\n\nexport default Section;\n","export default __webpack_public_path__ + \"static/media/image.ec6df721.jpg\";","export default __webpack_public_path__ + \"static/media/roundListStyle.c28602c8.svg\";","export default __webpack_public_path__ + \"static/media/roundListStyle.ce494a6f.svg\";","import styled, { css } from \"styled-components\";\nimport myPhoto from \"./image.jpg\";\nimport roundListStyle from \"../Assets/lightMode/roundListStyle.svg\";\nimport darkModeRoundListStyle from \"../Assets/darkMode/roundListStyle.svg\";\n\nexport const Container = styled.aside`\n  display: grid;\n  grid-template-rows: auto 1fr;\n  grid-template-areas:\n    \"title\"\n    \"content\";\n  padding: 32px;\n  background-color: ${({ theme }) => theme.colors.boxColor};\n  box-shadow: 0px -2px 50px rgba(9, 10, 51, 0.02),\n    0px 16px 58px rgba(9, 10, 51, 0.03);\n  border-radius: 4px;\n  width: 100%;\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    grid-template-rows: auto;\n  }\n  ${(props) =>\n    props.aboutMe &&\n    css`\n      grid-template-areas:\n        \"photo title\"\n        \"photo content\";\n      background-color: transparent;\n      box-shadow: none;\n      border: none;\n      width: auto;\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n        grid-template-areas:\n          \"photo\"\n          \"title\"\n          \"content\";\n      }\n    `}\n  ${(props) =>\n    props.portfolio &&\n    css`\n      background-color: transparent;\n      box-shadow: none;\n      border: none;\n      justify-items: center;\n      padding: 0px;\n    `}\n  ${(props) =>\n    props.myGithubProjects &&\n    css`\n      padding: 50px;\n      border: 6px solid ${({ theme }) => theme.colors.lightLine};\n      &:hover {\n        border: 6px solid ${({ theme }) => theme.colors.hoverLine};\n      }\n    `}\n  ${(props) =>\n    props.contact &&\n    css`\n      grid-template-areas:\n        \"title \"\n        \"content \";\n      width: 100%;\n      max-width: 670px;\n    `}\n`;\nexport const Photo = styled.div`\n  grid-area: photo;\n  background-image: url(${myPhoto});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  width: 398px;\n  height: 398px;\n  border-radius: 100%;\n  margin-right: 66px;\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    width: 132.67px;\n    height: 132.67px;\n  }\n`;\nexport const Inset = styled.h3`\n  font-size: 12px;\n  line-height: 130%;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.text};\n  ${(props) =>\n    props.portfolio &&\n    css`\n      text-align: center;\n    `}\n`;\nexport const Title = styled.h1`\n  grid-area: title;\n  font-weight: 900;\n  color: ${({ theme }) => theme.colors.title};\n  font-size: 30px;\n  line-height: 36px;\n  letter-spacing: 0.05em;\n  padding-bottom: 0px;\n  ${(props) =>\n    props.mySkills &&\n    css`\n      padding-bottom: 15px;\n      border-bottom: 1px solid ${({ theme }) => theme.colors.lightLine};\n    `}\n  ${(props) =>\n    props.skillsIWantToLearn &&\n    css`\n      padding-bottom: 15px;\n      border-bottom: 1px solid ${({ theme }) => theme.colors.darkLine};\n    `}\n\n  ${(props) =>\n    props.myGithubProjects &&\n    css`\n      color: ${({ theme }) => theme.colors.mainBlue};\n      font-size: 24px;\n    `}\n`;\nexport const ContentContainer = styled.div`\n  grid-area: content;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  font-size: 18px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.text};\n  letter-spacing: 0.05em;\n`;\nexport const Description = styled.p`\n  font-size: 20px;\n  line-height: 1.4;\n  letter-spacing: 0.05em;\n  color: ${({ theme }) => theme.colors.text};\n  margin: 35px 0 0 0;\n  ${(props) =>\n    props.myGithubProjects &&\n    css`\n      font-size: 18px;\n      margin-top: 24px;\n    `}\n`;\nexport const Button = styled.button`\n  font-weight: 600;\n  width: 154px;\n  font-size: 20.0584px;\n  line-height: 24px;\n  padding: 16px 18px;\n  background-color: ${({ theme }) => theme.colors.mainBlue};\n  color: #ffffff;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid rgba(209, 213, 218, 0.3);\n  border-radius: 4px;\n  margin-top: 32px;\n  transition: 0.3;\n  &:hover {\n    ${(props) =>\n      props.darkMode\n        ? \"box-shadow: 2px -2px 0px #8CC2FF, -2px 2px 0px #8CC2FF, 2px 2px 0px #8CC2FF, -2px -2px 0px #8CC2FF;\"\n        : \"box-shadow: 2px -2px 0px #6D93BE, -2px 2px 0px #6D93BE, 2px 2px 0px #6D93BE, -2px -2px 0px #6D93BE;\"};\n  }\n`;\nexport const List = styled.ul`\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: repeat(3, 1fr);\n  width: 100%;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n    grid-template-columns: none;\n  }\n  ${(props) =>\n    props.darkMode\n      ? `list-style-image: url(${roundListStyle});`\n      : `list-style-image: url(${darkModeRoundListStyle});`}\n  ${(props) =>\n    props.myGithubProjects &&\n    css`\n      grid-template-columns: none;\n      grid-template-rows: 1fr 1fr;\n      list-style: none;\n      padding: 0px;\n      width: auto;\n    `}\n  ${(props) =>\n    props.contact &&\n    css`\n      grid-template-columns: repeat(4, 1fr);\n      grid-template-rows: none;\n      list-style: none;\n      margin-top: 50px;\n      padding: 0px;\n      grid-gap: 24px;\n      width: auto;\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}px) {\n        grid-template-columns: repeat(4, 1fr);\n      }\n    `}\n`;\nexport const Item = styled.li`\n  font-size: 18px;\n  line-height: 1.4;\n  letter-spacing: 0.05em;\n  color: ${({ theme }) => theme.colors.text};\n`;\nexport const Icon = styled.img`\n  filter: ${(props) =>\n    props.darkMode\n      ? \"invert(0%) sepia(0%) saturate(0%) hue-rotate(329deg) brightness(500%) contrast(100%)\"\n      : \"invert(10%) sepia(0%) saturate(0%) hue-rotate(329deg) brightness(50%) contrast(100%)\"};\n  &:hover {\n    filter: none;\n  }\n`;\nexport const Link = styled.a`\n  color: ${({ theme }) => theme.colors.mainBlue};\n  line-height: 140%;\n  padding: 2px;\n  border-bottom: 1px solid rgba(3, 103, 216, 0.2);\n`;\nexport const Subheader = styled.h2`\n  font-size: 20px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.title};\n  margin-top: 8px;\n  font-weight: normal;\n`;\n","export default __webpack_public_path__ + \"static/media/message.26211eaa.svg\";","export default __webpack_public_path__ + \"static/media/github.a7ab0553.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.32dfdb72.svg\";","export default __webpack_public_path__ + \"static/media/facebook.1f62b7de.svg\";","export default __webpack_public_path__ + \"static/media/instagram.c4e5ffc5.svg\";","export default __webpack_public_path__ + \"static/media/github.422ac5a4.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.df12ab1b.svg\";","export default __webpack_public_path__ + \"static/media/facebook.eb8312b4.svg\";","export default __webpack_public_path__ + \"static/media/instagram.db1d67ee.svg\";","export const MySkills = [\n  \"Semantic & accessible HTML\",\n  \"Responsive Web Design\",\n  \"Teamwork\",\n  \"immutability\",\n  \"CSS BEM convention\",\n  \"CSS Grid\",\n  \" CSS Flexbox\",\n  \"Styled-Components\",\n  \"React Router\",\n  \"Redux-Saga\",\n  \"Redux(Toolkit)\",\n  \"Create -react-app\",\n  \"Working witch API\",\n  \"GitHub Pull Request & Review\",\n  \"Scrum\",\n];\nexport const SkillsIWantToLearn = [\n  \"React Context\",\n  \"TypeScript\",\n  \"Gatsby\",\n  \"Node.js\",\n  \"JS classes\",\n  \"Unit testing\",\n];\n","import React from \"react\";\nimport {\n  Container,\n  Photo,\n  Title,\n  ContentContainer,\n  Description,\n  Button,\n  List,\n  Item,\n  Inset,\n  Link,\n  Icon,\n  Subheader,\n} from \"./styled\";\nimport message from \"../Assets/message.svg\";\nimport githubIcon from \"../Assets/lightMode/github.svg\";\nimport linkedinIcon from \"../Assets/lightMode/linkedin.svg\";\nimport facebookIcon from \"../Assets/lightMode/facebook.svg\";\nimport instagramIcon from \"../Assets/lightMode/instagram.svg\";\nimport darkModeGithubIcon from \"../Assets/darkMode/github.svg\";\nimport darkModeLinkedinIcon from \"../Assets/darkMode/linkedin.svg\";\nimport darkModeFacebookIcon from \"../Assets/darkMode/facebook.svg\";\nimport darkModeInstagramIcon from \"../Assets/darkMode/instagram.svg\";\nimport { MySkills, SkillsIWantToLearn } from \"./arraysWithSkills\";\nimport { selectDarkMode } from \"../../projectsSlice\";\nimport { useSelector } from \"react-redux\";\n\nconst Tile = ({\n  inset,\n  title,\n  typeOfContent,\n  aboutMe,\n  contact,\n  portfolio,\n  myGithubProjects,\n  mySkills,\n  skillsIWantToLearn,\n}) => {\n  const darkMode = useSelector(selectDarkMode);\n  return (\n    <>\n      <Container\n        aboutMe={aboutMe}\n        contact={contact}\n        portfolio={portfolio}\n        myGithubProjects={myGithubProjects}\n      >\n        <Photo hidden={typeOfContent !== \"aboutMe\"}></Photo>\n        <div>\n          <Inset portfolio={portfolio}>\n            {typeOfContent !== \"portfolio\" ? (\n              inset\n            ) : (\n              <img src={githubIcon} alt=\"\"></img>\n            )}\n          </Inset>\n          <Title\n            aboutMe={aboutMe}\n            portfolio={portfolio}\n            myGithubProjects={myGithubProjects}\n            contact={contact}\n            mySkills={mySkills}\n            skillsIWantToLearn={skillsIWantToLearn}\n          >\n            {title}\n          </Title>\n        </div>\n        <ContentContainer>\n          {(() => {\n            switch (typeOfContent) {\n              case \"aboutMe\":\n                return (\n                  <>\n                    <Description>\n                      Lorem ipsum dolor sit amet, consetetur sadipscing elitr,\n                      sed diam nonumy eirmod tempor invidunt ut labore et dolore\n                      magna aliquyam erat, sed diam voluptua.\n                    </Description>\n                    <a href=\"mailto:madlen.checinski@gmail.com\">\n                      {\" \"}\n                      <Button>\n                        <img src={message} alt=\"\"></img> Hire me\n                      </Button>\n                    </a>\n                  </>\n                );\n\n              case \"mySkills\":\n                return (\n                  <List darkMode={darkMode}>\n                    {MySkills.map((skill) => (\n                      <Item key={skill}>{skill}</Item>\n                    ))}\n                  </List>\n                );\n              case \"skillsIWantToLearn\":\n                return (\n                  <List darkMode={darkMode}>\n                    {SkillsIWantToLearn.map((skill) => (\n                      <Item key={skill}>{skill}</Item>\n                    ))}\n                  </List>\n                );\n              case \"portfolio\":\n                return <Subheader>My recent projects</Subheader>;\n              case \"myGithubProjects\":\n                return (\n                  <>\n                    <Description myGithubProjects={myGithubProjects}>\n                      Project description, e.g. website where you can search for\n                      favourite movies and people. Project description, e.g.\n                      website where you can search.\n                    </Description>\n                    <List myGithubProjects={myGithubProjects}>\n                      <Item>\n                        {\" \"}\n                        Demo:{\" \"}\n                        <Link href=\"https://m4dzix.github.io/movies-browser/\">\n                          https://m4dzix.github.io/movies-browser/\n                        </Link>{\" \"}\n                      </Item>\n                      <Item>\n                        Live:{\" \"}\n                        <Link href=\"https://m4dzix.github.io/movies-browser/\">\n                          https://m4dzix.github.io/movies-browser/\n                        </Link>{\" \"}\n                      </Item>\n                    </List>\n                  </>\n                );\n\n              default:\n                return (\n                  <>\n                    <Description>\n                      Lorem ipsum dolor sit amet, consetetur sadipscing elitr,\n                      sed diam nonumy eirmod tempor invidunt ut labore et dolore\n                      magna aliquyam erat, sed diam voluptua. At vero eos et\n                      accusam et justo duo dolores et ea rebum. Stet clita kasd\n                      gubergren, no sea takimata sanctus est Lorem ipsum dolor\n                      sit amet.\n                    </Description>\n                    <List contact={contact}>\n                      <Item>\n                        <a href=\"https//google.pl\">\n                          <Icon\n                            darkMode={darkMode}\n                            src={!darkMode ? githubIcon : darkModeGithubIcon}\n                            alt=\"\"\n                          ></Icon>\n                        </a>\n                      </Item>\n                      <Item>\n                        <a href=\"https//google.pl\">\n                          {\" \"}\n                          <Icon\n                            darkMode={darkMode}\n                            src={\n                              !darkMode ? facebookIcon : darkModeFacebookIcon\n                            }\n                            alt=\"\"\n                          ></Icon>\n                        </a>\n                      </Item>\n                      <Item>\n                        <a href=\"https//google.pl\">\n                          {\" \"}\n                          <Icon\n                            darkMode={darkMode}\n                            src={\n                              !darkMode ? linkedinIcon : darkModeLinkedinIcon\n                            }\n                            alt=\"\"\n                          ></Icon>\n                        </a>{\" \"}\n                      </Item>\n                      <Item>\n                        <a href=\"https//google.pl\">\n                          {\" \"}\n                          <Icon\n                            darkMode={darkMode}\n                            src={\n                              !darkMode ? instagramIcon : darkModeInstagramIcon\n                            }\n                            alt=\"\"\n                          ></Icon>\n                        </a>{\" \"}\n                      </Item>\n                    </List>\n                  </>\n                );\n            }\n          })()}\n        </ContentContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default Tile;\n","import React from \"react\";\nimport Section from \"../common/Section\";\nimport Tile from \"../common/Tile\";\n\nconst AboutMe = () => {\n  return (\n    <Section\n      body={\n        <Tile\n          aboutMe={true}\n          inset={\"this is\"}\n          title={\"Magdalena Chęciński\"}\n          typeOfContent={\"aboutMe\"}\n        ></Tile>\n      }\n    ></Section>\n  );\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport Section from \"../common/Section\";\nimport Tile from \"../common/Tile\";\n\nconst ListsOfSkills = () => {\n  return (\n    <Section\n      body={\n        <>\n          {\" \"}\n          <Tile\n            mySkills={true}\n            title={\"My Skillset includes\"}\n            typeOfContent={\"mySkills\"}\n          ></Tile>{\" \"}\n          <Tile\n            skillsIWantToLearn={true}\n            title={\"Skills I want to learn\"}\n            typeOfContent={\"skillsIWantToLearn\"}\n          ></Tile>\n        </>\n      }\n    ></Section>\n  );\n};\n\nexport default ListsOfSkills;\n","import React from \"react\";\nimport Section from \"../common/Section\";\nimport Tile from \"../common/Tile\";\n\nconst Portfolio = () => {\n  return (\n    <Section\n      portfolio={true}\n      body={\n        <Tile\n          portfolio={true}\n          title={\"Portfolio\"}\n          typeOfContent={\"portfolio\"}\n        ></Tile>\n      }\n    ></Section>\n  );\n};\n\nexport default Portfolio;\n","export default __webpack_public_path__ + \"static/media/loader.88a075cf.svg\";","export default __webpack_public_path__ + \"static/media/loader.d1744388.svg\";","import styled, { keyframes } from \"styled-components\";\nimport loader from \"../Assets/lightMode/loader.svg\";\nimport darkModeLoader from \"../Assets/darkMode/loader.svg\";\n\nconst rotate = keyframes` \nto {\n  transform: rotate(360deg)\n}\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.title};\n  margin-bottom: 88px;\n`;\n\nexport const Loader = styled.div`\n  animation: ${rotate} 1s linear infinite;\n  width: 160px;\n  height: 160px;\n  margin-bottom: 88px;\n  ${(props) =>\n    props.darkMode\n      ? `background-image: url(${loader});`\n      : `background-image: url(${darkModeLoader});`}\n`;\n","import React from \"react\";\nimport { Container, Text, Loader } from \"./styled\";\nimport { selectDarkMode } from \"../../projectsSlice\";\nimport { useSelector } from \"react-redux\";\n\nconst Loading = () => {\n  const darkMode = useSelector(selectDarkMode);\n  return (\n    <Container>\n      <Text>Please wait, projects are being loaded...</Text>\n      <Loader darkMode={darkMode}></Loader>\n    </Container>\n  );\n};\n\nexport default Loading;\n","export default __webpack_public_path__ + \"static/media/error.a713ca87.svg\";","export default __webpack_public_path__ + \"static/media/error.fa1220b4.svg\";","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Subheader = styled.h3`\n  font-size: 24px;\n  color: ${({ theme }) => theme.colors.title};\n  letter-spacing: 0.05em;\n`;\nexport const Text = styled.p`\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 32px;\n  text-align: center;\n  letter-spacing: 0.05em;\n`;\nexport const GoToGithubButton = styled.a`\n  font-weight: 600;\n  font-size: 20.0584px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  letter-spacing: 0.05em;\n  padding: 12px 16px;\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.colors.mainblue};\n  color: ${({ theme }) => theme.colors.white};\n  &:hover {\n    color: ${({ theme }) => theme.colors.white};\n    background-color: ${({ theme }) => theme.colors.dodgerBlue};\n  }\n`;\n","import React from \"react\";\nimport errorIcon from \"../Assets/lightMode/error.svg\";\nimport darkModeErrorIcon from \"../Assets/darkMode/error.svg\";\nimport { Container, Subheader, Text, GoToGithubButton } from \"./styled\";\nimport { selectDarkMode } from \"../../projectsSlice\";\nimport { useSelector } from \"react-redux\";\n\nconst Error = () => {\n  const darkMode = useSelector(selectDarkMode);\n  return (\n    <Container>\n      <img src={!darkMode ? errorIcon : darkModeErrorIcon} alt=\"\"></img>\n      <Subheader>Ooops! Something went wrong...</Subheader>\n      <Text>\n        Sorry, failed to load Github projects.\n        <br />\n        You can check them directly on Github.\n      </Text>\n      <GoToGithubButton href=\"https://github.com/m4dzix\">\n        Go to Github\n      </GoToGithubButton>\n    </Container>\n  );\n};\n\nexport default Error;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProject, selectLoading, fetchProject } from \"../projectsSlice\";\nimport Section from \"../common/Section\";\nimport Tile from \"../common/Tile\";\nimport Loading from \"../common/Loading\";\nimport Error from \"../common/Error\";\n\nconst MyGithubProjects = () => {\n  const projects = useSelector(selectProject);\n  const loading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchProject());\n  }, [dispatch]);\n\n  if (!loading && projects.length > 0) {\n    return (\n      <Section\n        myGithubProjects={true}\n        body={projects.map((project) => {\n          return (\n            <Tile\n              key={project.name}\n              myGithubProjects={true}\n              title={project.name}\n              typeOfContent={\"myGithubProjects\"}\n              urlAdressToDemo={project.html_url}\n              urlAdressToLive={`https://${project.owner.login}.github.io/${project.name}/`}\n            ></Tile>\n          );\n        })}\n      ></Section>\n    );\n  } else if (!!loading) {\n    return <Loading />;\n  } else {\n    return <Error />;\n  }\n};\n\nexport default MyGithubProjects;\n","import React from \"react\";\nimport Section from \"../common/Section\";\nimport Tile from \"../common/Tile\";\n\nconst Contact = () => {\n  return (\n    <Section\n      body={\n        <Tile\n          aboutMe={true}\n          contact={true}\n          inset={\"let's talk!\"}\n          title={\n            <a href=\"mailto:madlen.checinski@gmail.com\">\n              madlen.checinski@gmail.com\n            </a>\n          }\n        ></Tile>\n      }\n    ></Section>\n  );\n};\n\nexport default Contact;\n","import { createGlobalStyle, css } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\nhtml{\n box-sizing: border-box;\n}\n\n*, ::after, ::before{\n box-sizing: inherit;\n}\n\nbody {\n font-family: 'Inter', sans-serif;\n background-color: ${({ theme }) => theme.colors.background};\n\n}\n\na {\ncolor: ${({ theme }) => theme.colors.title};\ntext-decoration: none;\n&:hover {\n  color: ${({ theme }) => theme.colors.mainBlue};\n  }\n}\n`;\n","export const lightTheme = {\n  colors: {\n    background: \"#FBFBFE\",\n    boxColor: \"#FFFFFF\",\n    title: \"#252525\",\n    text: \"#6E7E91\",\n    lightLine: \"rgba(209, 213, 218, 0.3)\",\n    darkLine: \"rgba(209, 213, 218, 0.3)\",\n    hoverLine: \"rgba(3, 102, 214, 0.2)\",\n    mainBlue: \"#0366D6\",\n  },\n  breakpoints: {\n    mobileMax: 812,\n  },\n};\n\nexport const darkTheme = {\n  colors: {\n    background: \"#252525\",\n    boxColor: \" rgba(54, 54, 54, 0.72)\",\n    title: \"#FFFFFF\",\n    text: \"#FFFFFF\",\n    lightLine: \"rgba(209, 213, 218, 0.1)\",\n    darkLine: \"#E5E5E5\",\n    hoverLine: \"rgba(3, 102, 214, 0.5)\",\n    mainBlue: \"#2188FF\",\n  },\n  breakpoints: {\n    mobileMax: 812,\n  },\n};\n","import React from \"react\";\nimport Main from \"./common/Main\";\nimport DarkModeButton from \"./common/DarkModeButton\";\nimport AboutMe from \"./features/AboutMe\";\nimport ListsOfSkills from \"./features/ListsOfSkills\";\nimport Portfolio from \"./features/Portfolio\";\nimport MyGithubProjects from \"./features/MyGithubProjects\";\nimport Contact from \"./features/Contact\";\nimport { selectDarkMode } from \"./projectsSlice\";\nimport { useSelector } from \"react-redux\";\nimport { GlobalStyle } from \"./globalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\n\nfunction App() {\n  const darkMode = useSelector(selectDarkMode);\n  return (\n    <ThemeProvider theme={!darkMode ? lightTheme : darkTheme}>\n      <GlobalStyle />\n      <Main>\n        <DarkModeButton />\n        <AboutMe />\n        <ListsOfSkills />\n        <Portfolio />\n        <MyGithubProjects />\n        <Contact />\n      </Main>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}